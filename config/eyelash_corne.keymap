#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34 42 43 44 45 46 47>;
            hold-trigger-on-release;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-key-positions = <7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41 46 47 45 44 43 42>;
            hold-trigger-on-release;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        Delete {
            bindings = <&kp DELETE>;
            key-positions = <8 9>;
        };

        Caps {
            bindings = <&kp CLCK>;
            key-positions = <3 4>;
        };

        Esc {
            bindings = <&kp ESCAPE>;
            key-positions = <2 1>;
        };

        LeftCtrl {
            bindings = <&kp LCTRL>;
            key-positions = <15 16>;
        };

        LeftShift {
            bindings = <&kp LEFT_SHIFT>;
            key-positions = <17 16>;
        };

        LeftAlt {
            bindings = <&kp LEFT_ALT>;
            key-positions = <15 14>;
        };

        RightShift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <23 24>;
        };

        RightCtrl {
            bindings = <&kp RCTRL>;
            key-positions = <24 25>;
        };

        RightAlt {
            bindings = <&kp RIGHT_ALT>;
            key-positions = <25 26>;
        };

        CtrlAltDel {
            bindings = <&kp LA(LC(DELETE))>;
            key-positions = <14 15 16 17>;
        };

        lwin {
            bindings = <&kp LEFT_WIN>;
            key-positions = <29 30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE      &hml RIGHT_BRACKET Q  &kp W  &kp E       &kp R        &kp T                             &kp UP                &kp Y          &kp U        &kp I      &kp O    &kp P           &kp BSPC
&kp LEFT_SHIFT  &kp A                 &kp S  &kp D       &kp F        &kp G                   &kp LEFT  &kp ENTER  &kp RIGHT  &kp H          &kp J        &kp K      &kp L    &hmr APOS SEMI  &kp RIGHT_SHIFT
&kp LCTRL       &kp Z                 &kp X  &kp C       &kp V        &kp B      &kp SPACE              &kp DOWN              &kp N          &kp M        &kp COMMA  &kp DOT  &kp FSLH        &kp RIGHT_CONTROL
                                             &kp ESCAPE  &lt 1 ENTER  &lt 3 TAB                                               &kp BACKSPACE  &lt 2 SPACE  &to 3
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;

            sensor-bindings = <&inc_dec_kp N2 N1>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&trans  &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                                   &mmv MOVE_UP                     &kp CARET  &kp AMPERSAND  &kp ASTRK                     &kp LEFT_PARENTHESIS            &kp RIGHT_PARENTHESIS  &kp BSPC
&trans  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LG(L)                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT   &kp UP_ARROW   &kp UP                        &hmr UNDER MINUS                &hmr PLUS EQUAL        &kp PG_UP
&trans  &kp F6     &kp F7     &kp F8     &kp F9     &kp F10    &kp C_MUTE                    &mmv MOVE_DOWN                   &kp HOME   &kp DOWN       &hmr LEFT_BRACE LEFT_BRACKET  &hmr RIGHT_BRACE RIGHT_BRACKET  &hmr PIPE BACKSLASH    &kp PG_DN
                              &trans     &trans     &kp SPACE                                                                 &kp ENTER  &trans         &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL          &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                               &mmv MOVE_UP                     &kp PAGE_UP    &kp HOME    &kp UP_ARROW    &kp END     &kp DELETE  &kp BSPC
&trans  &hml GRAVE TILDE  &trans        &trans        &trans        &trans                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp PAGE_DOWN  &kp LEFT    &trans          &kp RIGHT   &kp BSLH    &kp GRAVE
&trans  &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans                    &mmv MOVE_DOWN                   &kp UNDER      &kp C_PREV  &kp DOWN_ARROW  &kp C_NEXT  &kp PIPE    &kp TILDE
                                        &kp LEFT_WIN  &trans        &kp SPACE                                                                &kp RET        &trans      &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&none  &kp F1          &kp F2           &kp LC(A)        &kp F4           &kp PRINTSCREEN                                &mmv MOVE_UP                     &kp N7        &kp N8        &kp N9        &kp MINUS  &kp SLASH  &none
&none  &none           &none            &none            &none            &none                          &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp PLUS   &kp ASTRK  &none
&none  &rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &kp HOME         &kp C_MUTE                    &mmv MOVE_DOWN                   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp DOT    &kp EQUAL  &none
                                        &trans           &to 0            &trans                                                                          &trans        &kp N0        &kp DEL
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
